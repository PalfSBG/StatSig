---------------------------------------
--Product Metric Framework
--Metric: Total Betfair Sports Football Event Page Views with a Selection Added
--Author: Jack Mac Cionnaith
--Date: 01/11/24
---------------------------------------

INSERT INTO {target_dataset}.{experiment_metric_values}
(                                                      
    account_id,
    metric_id,
    metric_date,
    metric_value
)

--Get all page views
WITH pv_base as (
SELECT  
        dim_account.account_sk  AS account_id,
        cust_bi_ext_vw_events.event_date AS dt,
        cust_bi_ext_vw_events.event_timestamp,
        (cust_bi_ext_vw_events.user_pseudo_id   ||  cust_bi_ext_vw_events.event_param_ga_session_id   || ('BF')) AS "session_id",
        cust_bi_ext_vw_events.event_param_page_location AS "page_name",
        cust_bi_ext_vw_events.event_param_ga_session_number
FROM
    {ga_dataset}.vw_events AS cust_bi_ext_vw_events
INNER JOIN {omni_dataset}.{dim_account} AS dim_account 
      ON dim_account.account_id = cust_bi_ext_vw_events.account_id
     AND dim_account.brand_nk = cust_bi_ext_vw_events.brand
     
WHERE cust_bi_ext_vw_events.event_date BETWEEN '{from_date}' AND '{to_date}' 
AND cust_bi_ext_vw_events.event_name = 'page_view'                                                                      ---Specify Page View event
AND cust_bi_ext_vw_events.event_param_vertical = 'rebuild_sportsbook'                                                   ---Isolate Betfair Sportsbook
group by 1,2,3,4,5,6
ORDER BY dt, account_sk, event_timestamp asc 
),

--Use LEAD function to add subsequent page view effectively creating start/end timestamp
add_npv AS (
Select  dt, account_sk, event_timestamp, session_id, page_name, event_param_ga_session_number,
        NVL(lead(event_timestamp) OVER (Partition By dt, account_sk, session_id ORDER BY event_timestamp ASC), dateadd(minute,30,event_timestamp)) as pv_end
from pv_base
)                                                                                            ---Isolate selections added from homepage
group by 1,2,3,4,5,6

--Get all selections added from the homepage 
as_base as (
SELECT  
        cust_bi_ext_vw_events.event_date AS dt,
        dim_account.account_sk,
        cust_bi_ext_vw_events.event_timestamp,
        (cust_bi_ext_vw_events.user_pseudo_id   ||  cust_bi_ext_vw_events.event_param_ga_session_id   || ('BF')) AS "session_id",
        cust_bi_ext_vw_events.event_param_ga_session_number
FROM
    {ga_dataset}.vw_events AS cust_bi_ext_vw_events
INNER JOIN {omni_dataset}.{dim_account} AS dim_account 
      ON dim_account.account_id = cust_bi_ext_vw_events.account_id
     AND dim_account.brand_nk = cust_bi_ext_vw_events.brand
     
WHERE cust_bi_ext_vw_events.event_date BETWEEN '{from_date}' AND '{to_date}'
AND cust_bi_ext_vw_events.event_name = 'added_selection'                                                        ---Specify Add Selection event
AND cust_bi_ext_vw_events.event_param_vertical = 'rebuild_sportsbook'                                           ---Isolate Betfair Sportsbook
AND (
cust_bi_ext_vw_events.event_param_page_location like '%/football/%/e-%'
or
cust_bi_ext_vw_events.event_param_page_location like '%/soccer/%/e-%'
)                                                                                                               ---Isolate selections added from homepage
group by 1,2,3,4,5
ORDER BY dt, account_sk, event_timestamp asc 
),

selection_added_check AS (
Select a.dt, a.account_sk, a.event_timestamp, a.session_id, a.event_param_ga_session_number
from add_npv a
inner join as_base b 
        ON a.dt = b.dt
        AND a.account_sk = b.account_sk
        AND b.event_timestamp BETWEEN a.event_timestamp AND pv_end                      ---Check whether the selection was added between start/end of page view
        AND a.session_id = b.session_id
        AND a.event_param_ga_session_number = b.event_param_ga_session_number
where (
page_name like '%/football/%/e-%'
or
page_name like '%/soccer/%/e-%'
)                                                                                            ---Isolate selections added from homepage
group by 1,2,3,4,5
),

Select 
    account_sk as account_id,
    metric_id,
    dt as metric_date,
    count(event_timestamp) as metric_value
from selection_added_check
INNER JOIN {target_dataset}.{experiment_metrics} AS met
ON
    '{metric_name}' = met.metric_name
group by 1,2,3
;